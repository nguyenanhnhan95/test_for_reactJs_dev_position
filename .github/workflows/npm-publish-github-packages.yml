# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
      - name: Run tests
        run: npm test
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_NAME_TAG }}:game
      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_HUB_NAME_TAG }}:game
  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          run: |
            if [ -e yarn.lock ]; then
            yarn install --frozen-lockfile
            elif [ -e package-lock.json ]; then
            npm ci
            else
            npm i
            fi
            npm run build
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER_NAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script: 
            run |
            sudo docker pull ${{ secrets.DOCKER_HUB_NAME_TAG }}:game
            

